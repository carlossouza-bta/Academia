-- MySQL Script generated by MySQL Workbench
-- Sun Jun  7 13:49:43 2020
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';

-- -----------------------------------------------------
-- Schema Academia
-- -----------------------------------------------------
DROP SCHEMA IF EXISTS `Academia` ;

-- -----------------------------------------------------
-- Schema Academia
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `Academia` DEFAULT CHARACTER SET utf8 ;
USE `Academia` ;

-- -----------------------------------------------------
-- Table `Academia`.`Cliente`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `Academia`.`Cliente` ;

CREATE TABLE IF NOT EXISTS `Academia`.`Cliente` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `nome` VARCHAR(45) NOT NULL,
  `rg` VARCHAR(20) NOT NULL,
  `cpf` VARCHAR(14) NOT NULL,
  `endereco` VARCHAR(100) NOT NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Academia`.`Ferias`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `Academia`.`Ferias` ;

CREATE TABLE IF NOT EXISTS `Academia`.`Ferias` (
  `inicio_ferias` DATE NOT NULL,
  `fim_ferias` DATE NOT NULL,
  `id_cliente` INT(11) NOT NULL,
  PRIMARY KEY (`id_cliente`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Academia`.`Instrutores`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `Academia`.`Instrutores` ;

CREATE TABLE IF NOT EXISTS `Academia`.`Instrutores` (
  `id_instrutor` INT NOT NULL AUTO_INCREMENT,
  `nome` VARCHAR(45) NOT NULL,
  `rg` VARCHAR(45) NULL,
  `cpf` VARCHAR(45) NULL,
  PRIMARY KEY (`id_instrutor`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Academia`.`Aulas`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `Academia`.`Aulas` ;

CREATE TABLE IF NOT EXISTS `Academia`.`Aulas` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `tipo_aula` VARCHAR(45) NOT NULL,
  `nome_aula` VARCHAR(45) NOT NULL,
  `horario` VARCHAR(45) NOT NULL,
  `nome_instrutor` VARCHAR(45) NOT NULL,
  `dias_semanas` VARCHAR(45) NOT NULL,
  `sala` VARCHAR(45) NOT NULL,
  `Aulascol` VARCHAR(45) NOT NULL,
  `id_instrutor` INT(11) NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `id_instrutor_idx` (`id_instrutor` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Academia`.`Presenca`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `Academia`.`Presenca` ;

CREATE TABLE IF NOT EXISTS `Academia`.`Presenca` (
  `id_cliente` INT(11) NOT NULL,
  `id_aula` INT(11) NOT NULL,
  `data` DATE NOT NULL,
  PRIMARY KEY (`id_cliente`),
  INDEX `id_aula_idx` (`id_aula` ASC, `id_cliente` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Academia`.`Matricula`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `Academia`.`Matricula` ;

CREATE TABLE IF NOT EXISTS `Academia`.`Matricula` (
  `id_cliente` INT NOT NULL,
  `id_aula` INT NULL,
  INDEX `id_aulas_idx` (`id_cliente` ASC, `id_aula` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Academia`.`Fisioterapeuta`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `Academia`.`Fisioterapeuta` ;

CREATE TABLE IF NOT EXISTS `Academia`.`Fisioterapeuta` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `nome` VARCHAR(45) NOT NULL,
  `rg` VARCHAR(20) NOT NULL,
  `cpf` VARCHAR(14) NOT NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Academia`.`AvaliacaoFisica`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `Academia`.`AvaliacaoFisica` ;

CREATE TABLE IF NOT EXISTS `Academia`.`AvaliacaoFisica` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `anamnese` VARCHAR(45) NOT NULL,
  `dobras_cutaneas` VARCHAR(45) NOT NULL,
  `exame_ergometrico` VARCHAR(45) NOT NULL,
  `data_avaliacao` DATE NOT NULL,
  `Cliente_id` INT NOT NULL,
  `Fisioterapeuta_id` INT NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_avaliacao_fisica_Cliente1_idx` (`Cliente_id` ASC),
  INDEX `fk_AvaliacaoFisica_Fisioterapeuta1_idx` (`Fisioterapeuta_id` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Academia`.`Pagamento`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `Academia`.`Pagamento` ;

CREATE TABLE IF NOT EXISTS `Academia`.`Pagamento` (
  `idPagamento` INT NOT NULL AUTO_INCREMENT,
  `idCliente` INT NOT NULL,
  `tipo_plano` VARCHAR(15) NOT NULL,
  `data_pagamento` DATE NOT NULL,
  `data_prox_pagamento` DATE NOT NULL,
  `status_pagamento` VARCHAR(15) NOT NULL,
  PRIMARY KEY (`idPagamento`))
ENGINE = InnoDB
COMMENT = '						';


-- -----------------------------------------------------
-- Table `Academia`.`Gerente`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `Academia`.`Gerente` ;

CREATE TABLE IF NOT EXISTS `Academia`.`Gerente` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `nome` VARCHAR(45) NOT NULL,
  `rg` VARCHAR(20) NOT NULL,
  `cpf` VARCHAR(14) NOT NULL,
  `login` VARCHAR(45) NOT NULL,
  `senha` VARCHAR(256) NOT NULL,
  `id_pagamento` INT NULL,
  PRIMARY KEY (`id`),
  INDEX `id_pagamento_idx` (`id_pagamento` ASC))
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;


-- Criando admin
INSERT INTO Academia.Gerente (nome, rg, cpf, login, senha) values ("Carlos Daniel", "33.555.111-X", "123.456.789-01", "gerente", SHA2('gerente',256));

-- Criando clientes ativos
INSERT INTO Academia.cliente (nome, rg, cpf, endereco) values ("Sargento Garcia", "99.888.111-0", "665.654.654-59", "Los Angeles, Centro");
INSERT INTO Academia.cliente (nome, rg, cpf, endereco) values ("Marcos Armando", "99.888.111-0", "665.654.654-59", "São Paulo, Moema");
INSERT INTO Academia.cliente (nome, rg, cpf, endereco) values ("Alexandre Gava", "99.888.111-0", "665.654.654-59", "Alphaville, Alpha-1");

-- Criando clientes inadimplentes
INSERT INTO Academia.cliente (nome, rg, cpf, endereco) values ("Carlos Drummond de Andrade", "88.978.111-0", "555.321.654-59", "Rio de Janeiro, Brasil");
INSERT INTO Academia.cliente (nome, rg, cpf, endereco) values ("Vinicius de Morais", "88.978.111-0", "555.321.654-59", "Rio de Janeiro, Brasil");
INSERT INTO Academia.cliente (nome, rg, cpf, endereco) values ("Tom Jobim", "88.978.111-0", "555.321.654-59", "Rio de Janeiro, Brasil");

-- Criando Pagamentos
INSERT INTO Academia.pagamento (idCliente, tipo_plano, data_pagamento, data_prox_pagamento, status_pagamento) values (1, "Anual", "2020-06-06", "2020-07-06", "Pago");
INSERT INTO Academia.pagamento (idCliente, tipo_plano, data_pagamento, data_prox_pagamento, status_pagamento) values (2, "Mensal", "2020-05-29", "2020-06-29", "Pago");
INSERT INTO Academia.pagamento (idCliente, tipo_plano, data_pagamento, data_prox_pagamento, status_pagamento) values (3, "Anual", "2020-05-31", "2020-06-30", "Pago");

-- Criando Inadimplências
INSERT INTO Academia.pagamento (idCliente, tipo_plano, data_pagamento, data_prox_pagamento, status_pagamento) values (4, "Mensal", "2020-04-06", "2020-05-06", "Em aberto");
INSERT INTO Academia.pagamento (idCliente, tipo_plano, data_pagamento, data_prox_pagamento, status_pagamento) values (5, "Mensal", "2020-03-29", "2020-04-29", "Em aberto");
INSERT INTO Academia.pagamento (idCliente, tipo_plano, data_pagamento, data_prox_pagamento, status_pagamento) values (6, "Anual", "2020-05-01", "2020-06-01", "Em aberto");