/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package br.com.view;

import br.com.controller.ConexaoBD;
import br.com.controller.ControleCliente;
import br.com.model.Cliente;
import java.awt.event.KeyAdapter;
import java.awt.event.KeyEvent;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JOptionPane;

/**
 *
 * @author marco
 */
public class CadastrarCliente extends javax.swing.JFrame {

    private Cliente cliente;
    ControleCliente control = new ControleCliente();
    ConexaoBD conexaoBD = new ConexaoBD();
    
    /**
     * Creates new form ManterClientes
     */
    public CadastrarCliente() {
        initComponents();
    }
    
    public CadastrarCliente(Cliente cliente) {
        initComponents();
        this.cliente = cliente;
        jTextNome.setText(cliente.getName());
        jTextRG.setText(cliente.getRg());
        jTextCPF.setText(cliente.getCpf());
        jTextEndereco.setText(cliente.getEndereco());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        labelNome = new javax.swing.JLabel();
        labelRg = new javax.swing.JLabel();
        labelCpf = new javax.swing.JLabel();
        labelEndereco = new javax.swing.JLabel();
        botaoSalvar = new javax.swing.JButton();
        botaoCancelarCadastro = new javax.swing.JButton();
        jTextNome = new javax.swing.JTextField();
        jTextRG = new javax.swing.JTextField();
        jTextCPF = new javax.swing.JTextField();
        jTextEndereco = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Cadastro Cliente");

        labelNome.setText("Nome* :");

        labelRg.setText("RG* :");

        labelCpf.setText("CPF* :");

        labelEndereco.setText("Endereço:");

        botaoSalvar.setText("Salvar");
        botaoSalvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaoSalvarActionPerformed(evt);
            }
        });

        botaoCancelarCadastro.setText("Cancelar");
        botaoCancelarCadastro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaoCancelarCadastroActionPerformed(evt);
            }
        });

        jTextNome.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextNomeActionPerformed(evt);
            }
        });

        jTextRG.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextRGActionPerformed(evt);
            }
        });

        jTextCPF.setToolTipText("XXX.XXX.XXX-XX");
        jTextCPF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextCPFActionPerformed(evt);
            }
        });

        jTextEndereco.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextEnderecoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(33, 33, 33)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(labelNome)
                    .addComponent(labelRg)
                    .addComponent(labelCpf))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jTextNome)
                    .addComponent(jTextRG)
                    .addComponent(jTextCPF, javax.swing.GroupLayout.PREFERRED_SIZE, 209, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(labelEndereco)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(botaoCancelarCadastro)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(botaoSalvar))
                    .addComponent(jTextEndereco, javax.swing.GroupLayout.PREFERRED_SIZE, 196, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(39, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(39, 39, 39)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelNome)
                    .addComponent(jTextNome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(28, 28, 28)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelRg)
                    .addComponent(jTextRG, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelCpf)
                    .addComponent(jTextCPF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(labelEndereco)
                    .addComponent(jTextEndereco, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 49, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(botaoSalvar)
                    .addComponent(botaoCancelarCadastro))
                .addContainerGap())
        );

        setSize(new java.awt.Dimension(636, 279));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void botaoCancelarCadastroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botaoCancelarCadastroActionPerformed
        criarFuncionalidadeVoltar();
    }//GEN-LAST:event_botaoCancelarCadastroActionPerformed

    private void botaoSalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botaoSalvarActionPerformed
        if(null == cliente) {
            cliente = new Cliente();
            preencherDadosCliente();
            String camposVazios = validarCamposObrigatorios();
            if(camposVazios.isEmpty()) {
                control.salvar(cliente);
                criarFuncionalidadeVoltar();
            } else {
                JOptionPane.showMessageDialog(null, "Os seguintes campos são obrigatórios:\n"+camposVazios);
            }
        } else {
            preencherDadosCliente();
            String camposVazios = validarCamposObrigatorios();
            if(camposVazios.isEmpty()) {
                control.alterar(cliente);    
                criarFuncionalidadeVoltar();
            } else {
                JOptionPane.showMessageDialog(null, "Os seguintes campos são obrigatórios:\n"+camposVazios);
            }
        }
    }//GEN-LAST:event_botaoSalvarActionPerformed

    private void preencherDadosCliente() {
        cliente.setName(jTextNome.getText());
        cliente.setRg(jTextRG.getText());
        cliente.setCpf(jTextCPF.getText());
        cliente.setEndereco(jTextEndereco.getText());
    }

    private void jTextRGActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextRGActionPerformed
        if(jTextRG.getText().length() >= 20)
            jTextRG.setText(jTextRG.getText().substring(0, 19));
    
    }//GEN-LAST:event_jTextRGActionPerformed

    private void jTextNomeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextNomeActionPerformed
        if(jTextNome.getText().length() >= 45)
            jTextNome.setText(jTextNome.getText().substring(0, 44));
    }//GEN-LAST:event_jTextNomeActionPerformed

    private void jTextCPFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextCPFActionPerformed
        if(jTextCPF.getText().length() >= 14)
            jTextCPF.setText(jTextCPF.getText().substring(0, 13));
    }//GEN-LAST:event_jTextCPFActionPerformed

    private void jTextEnderecoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextEnderecoActionPerformed
        if(jTextCPF.getText().length() >= 100)
            jTextCPF.setText(jTextCPF.getText().substring(0, 99));
    }//GEN-LAST:event_jTextEnderecoActionPerformed

    private void criarFuncionalidadeVoltar() {
        this.toBack();
        setVisible(false);
        ManterClientes mc = new ManterClientes();
        mc.toFront();
        mc.setVisible(true);
        mc.setState(java.awt.Frame.NORMAL);
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CadastrarCliente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new CadastrarCliente().setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton botaoCancelarCadastro;
    private javax.swing.JButton botaoSalvar;
    private javax.swing.JTextField jTextCPF;
    private javax.swing.JTextField jTextEndereco;
    private javax.swing.JTextField jTextNome;
    private javax.swing.JTextField jTextRG;
    private javax.swing.JLabel labelCpf;
    private javax.swing.JLabel labelEndereco;
    private javax.swing.JLabel labelNome;
    private javax.swing.JLabel labelRg;
    // End of variables declaration//GEN-END:variables

    private String validarCamposObrigatorios() {
        String camposNaoPreenchidos = "";
        
        if(jTextNome.getText().isEmpty()) {
            camposNaoPreenchidos += "Nome\n";
        }
        if(jTextRG.getText().isEmpty()) {
            camposNaoPreenchidos += "RG\n";
        }
        if(jTextCPF.getText().isEmpty()) {
            camposNaoPreenchidos += "CPF\n";
        }
        return camposNaoPreenchidos;                
    }
}
